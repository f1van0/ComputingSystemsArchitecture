model small
.stack 100h
.data
indent db 60
currentRow db 00h
space db 0
rowsCount equ 10
colsCount equ 3
.code
start:
mov ax, @data
mov ds,ax
mov space, colsCount ;область очистки равна количеству символов в строке
inc space            ;область очистки увеличивается на 1, чтобы сократить количество операций в будущем

MOV  AH,05       ;задать активную страницу
MOV  AL,01h      ;страница 01h
INT  10H         ;прерывание

;   {Цикл для воспроизведения анимации смещения символов влево}
cycle1:
;   {Цикл для итерирования по строкам. Вывод символов на нужных строках}
cycle2:
;[Этап установки позиции курсора в нужное место экрана]
MOV  AH,02      	   ;установить позицию курсора
MOV  BH,01h     	   ;на странице 01h
MOV  DH,currentRow     ;на строку currentRow
MOV  DL,indent  	   ;в строке сделать отступ indent
INT  10H        	   ;прерывание

;[Этап стирания прошлых записей с консоли]
MOV  AH,09          ;записать символ на позицию курсора
MOV  AL,255         ;пустой символ
MOV  BL,00H			;черного цвета
MOV  CL, space      ;space раз
INT  10H            ;прерывание

;[Этап записи определенных символов colsCount раз]
MOV  AH,09          ;Вывод строки
MOV  AL,24H         ;Вывод символа $
MOV  BL, 0A0H		;Цвет текста и фона, 0A0H - цвет текста черный, а заливка зеленая, текст мигает
MOV  CL, colsCount  ;colsCount раз;
INT  10H            ;прерывание

inc currentRow             ;номер строки увеличивается
cmp currentRow, rowsCount  ;сравнивается с заданным количеством строк для вывода
jb cycle2				   ;если номер строки меньше заданного количество, то происходит переход к метке cycle2

mov cx, 1   	  ;длина интервала (задержка)
mov ah, 86h 	  ;системный таймер
int 15h			  ;прерывание
mov currentRow, 0 ;текущая строка становится = 0, чтобы, в случае перерисовки, перерисовалось такое же количество строк
cmp indent, 0 	  ;если смещение от левого края экрана = 0, то
	jbe endd 	  ;выход (анимация закончилась)
dec indent        ;иначе уменьшение смещения на 1

jmp cycle1 ;переход к метке cycle1

endd:
mov ah, 4Ch
int 21h
end start